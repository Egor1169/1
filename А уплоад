1<?php
2ini_set('display_errors', 1);
3ini_set('display_startup_errors', 1);
4error_reporting(E_ALL);
5
6date_default_timezone_set('Europe/Moscow');
7
8if ($_SERVER['REQUEST_METHOD'] == 'POST') {
9    $uploadDir = 'uploads/';
10    $watermarkedDir = 'watermarked/';
11    $thumbnailDir = 'thumbnails/';
12
13    // Санитизация пользовательского ввода
14    $description = htmlspecialchars($_POST['description'], ENT_QUOTES, 'UTF-8');
15
16    $uploadFile = $uploadDir . basename($_FILES['image']['name']);
17    $watermarkedFile = $watermarkedDir . basename($_FILES['image']['name']);
18    $thumbnailFile = $thumbnailDir . basename($_FILES['image']['name']);
19    $uploadTime = time();
20
21    $imageFileType = strtolower(pathinfo($uploadFile, PATHINFO_EXTENSION));
22    $allowedTypes = array('jpg', 'jpeg', 'png', 'gif');
23
24    if (!in_array($imageFileType, $allowedTypes)) {
25        echo '<div class="error-message">Ошибка: Разрешены только файлы JPG, JPEG, PNG и GIF.</div>';
26        echo '<br><a href="index.php"><button>Вернуться на страницу загрузки</button></a>';
27        exit;
28    }
29
30    if (file_exists($uploadFile)) {
31        echo '<div class="error-message">Ошибка: Файл с таким именем уже существует.</div>';
32        echo '<br><a href="index.php"><button>Вернуться на страницу загрузки</button></a>';
33        exit;
34    }
35
36    if (move_uploaded_file($_FILES['image']['tmp_name'], $uploadFile)) {
37        $imageData = [
38            "description" => $description,
39            "uploadTime" => $uploadTime,
40            "originalFilename" => $_FILES['image']['name'],
41            "fileSize" => $_FILES['image']['size'],
42            "fileType" => $_FILES['image']['type'],
43            "serverIP" => $_SERVER['SERVER_ADDR'],
44            "clientIP" => $_SERVER['REMOTE_ADDR'],
45            "phpVersion" => PHP_VERSION,
46        ];
47
48        // Определяем тип изображения и создаем объект изображения
49        switch ($imageFileType) {
50            case 'jpg':
51            case 'jpeg':
52                $image = imagecreatefromjpeg($uploadFile);
53                break;
54            case 'png':
55                $image = imagecreatefrompng($uploadFile);
56                break;
57            case 'gif':
58                $image = imagecreatefromgif($uploadFile);
59                break;
60            default:
61                echo '<div class="error-message">Ошибка: Неверный тип изображения.</div>';
62                exit;
63        }
64
65        $imageData["width"] = imagesx($image);
66        $imageData["height"] = imagesy($image);
67        imagedestroy($image);
68
69        $descriptionFile = $uploadDir . pathinfo($uploadFile, PATHINFO_FILENAME) . '.json';
70        file_put_contents($descriptionFile, json_encode($imageData, JSON_PRETTY_PRINT));
71
72        // Создание текстового водяного знака
73        $watermarkText = "© Ваш Водяной Знак"; // Замените на нужный текст
74        $fontSize = 20;
75        $textColor = imagecolorallocate($image, 255, 255, 255); // Белый цвет
76        $outlineColor = imagecolorallocate($image, 0, 0, 0); // Черный цвет для обводки
77        $fontFile = __DIR__ . '/arial.ttf'; // Убедитесь, что этот шрифт существует
78
79        // Загрузка изображения для водяного знака
80        switch ($imageFileType) {
81            case 'jpg':
82            case 'jpeg':
83                $image = imagecreatefromjpeg($uploadFile);
84                break;
85            case 'png':
86                $image = imagecreatefrompng($uploadFile);
87                break;
88            case 'gif':
89                $image = imagecreatefromgif($uploadFile);
90                break;
91        }
 // Получаем размеры текста
94        $textBox = imagettfbbox($fontSize, 0, $fontFile, $watermarkText);
95        $textWidth = $textBox[2] - $textBox[0];
96        $textHeight = $textBox[1] - $textBox[7];
97
98        // Позиция текста
99        $x = imagesx($image) - $textWidth - 10; // 10 пикселей от края
100        $y = imagesy($image) - $textHeight - 10; // 10 пикселей от края
101
102        // Наносим обводку текста
$outlineThickness = 2;
3        for ($c = -$outlineThickness; $c <= $outlineThickness; $c++) {
4            imagettftext($image, $fontSize, 0, $x + $c, $y + $c, $outlineColor, $fontFile, $watermarkText);
5        }
6
7        // Наносим основной текст
8        imagettftext($image, $fontSize, 0, $x, $y, $textColor, $fontFile, $watermarkText);
9
10        // Сохраняем изображение с водяным знаком
11        switch ($imageFileType) {
12            case 'jpg':
13            case 'jpeg':
14                imagejpeg($image, $watermarkedFile);
15                break;
16            case 'png':
17                imagepng($image, $watermarkedFile);
18                break;
19            case 'gif':
20                imagegif($image, $watermarkedFile);
21                break;
22        }
23
24        // Создание миниатюры
25        $thumbnailWidth = 150; // Ширина миниатюры
26        $thumbnailHeight = 150; // Высота миниатюры
27
28        $thumbnail = imagecreatetruecolor($thumbnailWidth, $thumbnailHeight);
29        $originalImage = null;
30
31        // Загружаем оригинальное изображение для создания миниатюры
32        switch ($imageFileType) {
33            case 'jpg':
34            case 'jpeg':
35                $originalImage = imagecreatefromjpeg($uploadFile);
36                break;
37            case 'png':
38                $originalImage = imagecreatefrompng($uploadFile);
39                break;
40            case 'gif':
41                $originalImage = imagecreatefromgif($uploadFile);
42                break;
43        }
44
45        // Изменяем размер оригинального изображения для создания миниатюры
46        imagecopyresampled($thumbnail, $originalImage, 0, 0, 0, 0, $thumbnailWidth, $thumbnailHeight, imagesx($originalImage), imagesy($originalImage));
47
48        // Сохраняем миниатюру
49        switch ($imageFileType) {
50            case 'jpg':
51            case 'jpeg':
52                imagejpeg($thumbnail, $thumbnailFile);
53                break;
54            case 'png':
55                imagepng($thumbnail, $thumbnailFile);
56                break;
57            case 'gif':
58                imagegif($thumbnail, $thumbnailFile);
59                break;
60        }
61
62        // Освобождаем память
63        imagedestroy($image);
64        imagedestroy($thumbnail);
65        imagedestroy($originalImage);
66
67        echo '<div class="success-message">Файл успешно загружен и обработан!</div>';
68        echo '<br><a href="index.php"><button>Вернуться на страницу загрузки</button></a>';
69    } else {
70        echo '<div class="error-message">Ошибка при загрузке файла.</div>';
71        echo '<br><a href="index.php"><button>Вернуться на страницу загрузки</button></a>';
72    }
73}
74?>
