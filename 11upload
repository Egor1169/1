<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $targetDir = "images/";

    // Создаем папку, если она не существует
    if (!is_dir($targetDir)) {
        mkdir($targetDir, 0755, true);
    }

    $fileName = basename($_FILES["image"]["name"]);
    $targetFilePath = $targetDir . $fileName;

    // Проверка на существование файла
    if (file_exists($targetFilePath)) {
        echo json_encode(["error" => "Файл с таким именем уже существует."]);
        exit;
    }

    // Проверка типа файла
    $fileType = pathinfo($targetFilePath, PATHINFO_EXTENSION);
    $allowedTypes = ['jpg', 'jpeg', 'png', 'gif'];

    if (!in_array($fileType, $allowedTypes)) {
        echo json_encode(["error" => "Недопустимый тип файла."]);
        exit;
    }

    // Загрузка изображения
    if (move_uploaded_file($_FILES["image"]["tmp_name"], $targetFilePath)) {
        // Создание превью
        createThumbnail($targetFilePath);
        echo json_encode(["success" => "Файл успешно загружен.", "fileName" => $fileName]);
    } else {
        echo json_encode(["error" => "Ошибка загрузки файла."]);
    }
}

function createThumbnail($filePath) {
    $thumbnailPath = 'images/preview_' . basename($filePath);
    list($width, $height) = getimagesize($filePath);
    $thumbWidth = 150;
    $thumbHeight = ($height / $width) * $thumbWidth;

    $src = imagecreatefromstring(file_get_contents($filePath));
    $dst = imagecreatetruecolor($thumbWidth, $thumbHeight);
    imagecopyresampled($dst, $src, 0, 0, 0, 0, $thumbWidth, $thumbHeight, $width, $height);
    
    // Нанесение даты и времени
    $textColor = imagecolorallocate($dst, 255, 255, 255);
    $dateTime = date('Y-m-d H:i:s');
    imagestring($dst, 5, 10, 10, $dateTime, $textColor);
    imagejpeg($dst, $thumbnailPath);
    imagedestroy($src);
    imagedestroy($dst);
}
?>
