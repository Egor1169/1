<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Браузер Баз Данных</title>
<style>
body {
font-family: Arial, sans-serif;
margin: 20px;
background-color: #f4f4f4; /* Легкий фон для страницы */
color: #333; /* Цвет текста */
}

h1 {
color: #4CAF50; /* Основной цвет заголовка */
border-bottom: 2px solid #4CAF50; /* Подчеркивание заголовка */
padding-bottom: 10px;
}

h2, h3 {
color: #333;
margin-top: 30px;
}

h3 {
color: #666;
margin-top: 20px;
}

table {
width: 100%;
border-collapse: collapse;
margin-top: 20px; /* Отступ сверху таблицы */
background-color: #fff; /* Фон таблицы */
box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Тень для эффекта поднятости */
}

table, th, td {
border: 1px solid #dddddd; /* Цвет границ таблицы */
padding: 12px; /* Отступы в ячейках */
}

th {
background-color: #4CAF50; /* Фон заголовка таблицы */
color: white; /* Цвет текста заголовка */
}

tr:nth-child(even) {
background-color: #f9f9f9; /* Чередование фона строк для лучшего восприятия */
}

a {
color: #4CAF50; /* Цвет ссылок */
text-decoration: none; /* Убираем подчеркивание */
}

a:hover {
text-decoration: underline; /* Подчеркивание при наведении */
}

.pagination {
margin-top: 20px; /* Отступ сверху для пагинации */
display: flex;
justify-content: center; /* Центрирование пагинации */
}

.pagination a {
margin: 0 5px; /* Отступы между кнопками */
padding: 8px 12px; /* Отступы внутри кнопок */
background-color: #4CAF50; /* Основной цвет кнопок */
color: white; /* Цвет текста кнопок */
border-radius: 5px; /* Закругленные углы */
transition: background-color 0.3s; /* Плавный переход цвета фона */
}

.pagination a:hover {
background-color: #45a049; /* Темный цвет фона при наведении */
}

.search-bar {
margin: 20px 0; /* Отступы для формы поиска */
}

.search-bar input[type="text"] {
padding: 10px;
width: 80%; /* Ширина поля ввода */
border: 1px solid #ccc;
border-radius: 5px; /* Закругленные углы */
}

.search-bar input[type="submit"] {
padding: 10px 15px;
background-color: #4CAF50; /* Основной цвет кнопки поиска */
color: white;
border: none;
border-radius: 5px; /* Закругленные углы */
cursor: pointer; /* Курсор в виде указателя */
}

.search-bar input[type="submit"]:hover {
background-color: #45a049; /* Темный цвет фона кнопки поиска при наведении */
}
</style>
</head>
<body>

<h1>Браузер Баз Данных</h1>

<?php
// Конфигурация базы данных
$host = 'localhost'; // Обычно localhost
$user = 'your_username'; // Имя пользователя базы данных
$password = 'your_password'; // Пароль пользователя базы данных

// Соединение с сервером MySQL
$conn = new mysqli($host, $user, $password);

// Проверка соединения
if ($conn->connect_error) {
die("Ошибка подключения: " . $conn->connect_error);
}

// Функция для отображения баз данных
function getDatabases($conn) {
echo "<h2>Доступные базы данных</h2>";
echo "<ul>";
$result = $conn->query("SHOW DATABASES");
while ($row = $result->fetch_assoc()) {
echo '<li><a href="?db=' . urlencode($row['Database']) . '">' . htmlspecialchars($row['Database']) . '</a></li>';
}
echo "</ul>";
}

// Функция для отображения таблиц
function getTables($conn, $db) {
$conn
->select_db($db);
echo "<h2>Таблицы в базе данных: " . htmlspecialchars($db) . "</h2>";
echo "<ul>";
$result = $conn->query("SHOW TABLES");
while ($row = $result->fetch_row()) {
echo '<li><a href="?db=' . urlencode($db) . '&table=' . urlencode($row[0]) . '">' . htmlspecialchars($row[0]) . '</a></li>';
}
echo "</ul>";
}

// Функция для отображения данных таблицы с поиском
function getTableData($conn, $db, $table, $search = '') {
$conn->select_db($db);

// Строка поиска
echo '<div class="search-bar">
<form method="GET">
<input type="hidden" name="db" value="' . htmlspecialchars($db) . '">
<input type="hidden" name="table" value="' . htmlspecialchars($table) . '">
<input type="text" name="search" placeholder="Введите текст для поиска" value="' . htmlspecialchars($search) . '">
<input type="submit" value="Поиск">
</form>
</div>';

// Вывод структуры таблицы
$result = $conn->query("SHOW COLUMNS FROM " . $conn->real_escape_string($table));
echo "<h3>Структура таблицы</h3>";
echo "<table><tr><th>Поле</th><th>Тип</th></tr>";
while ($row = $result->fetch_assoc()) {
echo "<tr><td>" . htmlspecialchars($row['Field']) . "</td><td>" . htmlspecialchars($row['Type']) . "</td></tr>";
}
echo "</table>";

// Пагинация
$page = isset($_GET['page']) ? (int)$_GET['page'] : 1;
$limit = 50;
$offset = ($page - 1) * $limit;

// Поиск данных в таблице
$searchQuery = '';
if (!empty($search)) {
$search = $conn->real_escape_string($search);
$searchQuery = " WHERE CONCAT_WS('', " . implode(', ', array_map(function($field) {
return "`" . $field . "`";
}, array_column($conn->query("SHOW COLUMNS FROM " . $table), 'Field'))) . ") LIKE '%$search%'";
}

$result = $conn->query("SELECT * FROM " . $conn->real_escape_string($table) . $searchQuery . " LIMIT $limit OFFSET $offset");
echo "<h3>Данные таблицы</h3>";
echo "<table><tr>";

// Получаем названия колонок
$fields = $result->fetch_fields();
foreach ($fields as $field) {
echo "<th>" . htmlspecialchars($field->name) . "</th>";
}
echo "</tr>";

while ($row = $result->fetch_assoc()) {
echo "<tr>";
foreach ($row as $value) {
echo "<td>" . htmlspecialchars($value) . "</td>";
}
echo "</tr>";
}
echo "</table>";

// Если есть данные для пагинации
$resultTotal = $conn->query("SELECT COUNT(*) AS total FROM " . $conn->real_escape_string($table) . $searchQuery);
$total = $resultTotal->fetch_assoc()['total'];
$totalPages = ceil($total / $limit);

// Вывод пагинации
echo '<div class="pagination">';
for ($i = 1; $i <= $totalPages; $i++) {
echo '<a href="?db=' . urlencode($db) . '&table=' . urlencode($table) . '&page=' . $i . '&search=' . urlencode($search) . '">' . $i . '</a>';
}
echo '</div>';
}

// Основная логика
if (isset($_GET['db']) && isset($_GET['table'])) {
$search = isset($_GET['search']) ? $_GET['search'] : '';
getTableData($conn, $_GET['db'], $_GET['table'], $search);
} elseif (isset($_GET['db'])) {
getTables($conn, $_GET['db']);
} else {
getDatabases($conn);
}

// Закрытие соединения
$conn->close();
?>
</body>
</html>
